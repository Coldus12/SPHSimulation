#version 450
layout (local_size_x = 64) in; //256

#include comp_shader.incl

//----------------------------------------------------------------------------------------------------------------------

void computeSumDijPj(uint gID) {
    vec3 dijpj = vec3(0);

    for (int j = 0; j < ubo.nr_of_particles; j++) {
        if (gID == j)
            continue;

        if (abs(in_data.p[j].rho) > 0.0001)
            dijpj += in_data.p[j].m * in_data.p[j].p / (in_data.p[j].rho * in_data.p[j].rho) * cs_gradKernel(in_data.p[gID].x, in_data.p[j].x);
    }

    dijpj *= -ubo.dt * ubo.dt;

    iisph_add_data.p[gID].sumDijPj = dijpj;
}

void main()
{
    //grab global ID
    uint gID = gl_GlobalInvocationID.x;

    if (gID < ubo.nr_of_particles) {
        computeSumDijPj(gID);
    }
}