#version 450
layout (local_size_x = 1024) in;

struct Sphere {
    vec3 pos;
    float rad;
};

layout(set = 0, binding = 0, std140) readonly buffer inBuffer {
    Sphere sphs[];
} in_data;

layout(set = 0, binding = 1, std140) buffer outBuffer {
    Sphere sphs[];
} out_data;

void main()
{
    //grab global ID
    uint gID = gl_GlobalInvocationID.x;

    out_data.sphs[gID].pos = in_data.sphs[gID].pos;
    out_data.sphs[gID].rad = dot(in_data.sphs[gID].pos,in_data.sphs[gID].pos) + in_data.sphs[gID].rad;
}